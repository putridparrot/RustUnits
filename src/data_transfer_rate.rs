// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

//! # Data Transfer Rate based converters

/// Bits Per Second conversion functions
pub mod bits_per_second {
	/// Converts the supplied Bits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied Bits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value / 1e+6;
	}
	/// Converts the supplied Bits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 1e+9;
	}
	/// Converts the supplied Bits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 1e+12;
	}
	/// Converts the supplied Bits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value / 8000.0;
	}
	/// Converts the supplied Bits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 8e+6;
	}
	/// Converts the supplied Bits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 8e+9;
	}
	/// Converts the supplied Bits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 8e+12;
	}
	/// Converts the supplied Bits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value / 1024.0;
	}
	/// Converts the supplied Bits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The Bits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value / 1048576.0;
	}
}
/// GigaBits Per Second conversion functions
pub mod giga_bits_per_second {
	/// Converts the supplied GigaBits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1e+9;
	}
	/// Converts the supplied GigaBits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 1e+6;
	}
	/// Converts the supplied GigaBits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied GigaBits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied GigaBits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 125000.0;
	}
	/// Converts the supplied GigaBits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value * 125.0;
	}
	/// Converts the supplied GigaBits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 8.0;
	}
	/// Converts the supplied GigaBits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 8000.0;
	}
	/// Converts the supplied GigaBits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 976562.5;
	}
	/// Converts the supplied GigaBits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The GigaBits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value * 953.67431640625;
	}
}
/// GigaBytes Per Second conversion functions
pub mod giga_bytes_per_second {
	/// Converts the supplied GigaBytes Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 8e+9;
	}
	/// Converts the supplied GigaBytes Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 8e+6;
	}
	/// Converts the supplied GigaBytes Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 8000.0;
	}
	/// Converts the supplied GigaBytes Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value * 8.0;
	}
	/// Converts the supplied GigaBytes Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 125.0;
	}
	/// Converts the supplied GigaBytes Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 1e+6;
	}
	/// Converts the supplied GigaBytes Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied GigaBytes Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied GigaBytes Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 7812500.0;
	}
	/// Converts the supplied GigaBytes Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The GigaBytes Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value * 7629.39;
	}
}
/// Kibibits Per Second conversion functions
pub mod kibibits_per_second {
	/// Converts the supplied Kibibits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1024.0;
	}
	/// Converts the supplied Kibibits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 1.024;
	}
	/// Converts the supplied Kibibits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value / 976.563;
	}
	/// Converts the supplied Kibibits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 976562.5;
	}
	/// Converts the supplied Kibibits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 976562500.0;
	}
	/// Converts the supplied Kibibits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value / 7.8125;
	}
	/// Converts the supplied Kibibits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 7812.5;
	}
	/// Converts the supplied Kibibits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 7812500.0;
	}
	/// Converts the supplied Kibibits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 7812500000.0;
	}
	/// Converts the supplied Kibibits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The Kibibits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value / 1024.0;
	}
}
/// KiloBits Per Second conversion functions
pub mod kilo_bits_per_second {
	/// Converts the supplied KiloBits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied KiloBits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied KiloBits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 1e+6;
	}
	/// Converts the supplied KiloBits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 1e+9;
	}
	/// Converts the supplied KiloBits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value / 8.0;
	}
	/// Converts the supplied KiloBits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 8000.0;
	}
	/// Converts the supplied KiloBits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 8e+6;
	}
	/// Converts the supplied KiloBits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 8e+9;
	}
	/// Converts the supplied KiloBits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value / 1.024;
	}
	/// Converts the supplied KiloBits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The KiloBits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value / 1048.58;
	}
}
/// KiloBytes Per Second conversion functions
pub mod kilo_bytes_per_second {
	/// Converts the supplied KiloBytes Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 8000.0;
	}
	/// Converts the supplied KiloBytes Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 8.0;
	}
	/// Converts the supplied KiloBytes Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value / 125.0;
	}
	/// Converts the supplied KiloBytes Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 125000.0;
	}
	/// Converts the supplied KiloBytes Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 1.25e+8;
	}
	/// Converts the supplied KiloBytes Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied KiloBytes Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 1e+6;
	}
	/// Converts the supplied KiloBytes Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 1e+9;
	}
	/// Converts the supplied KiloBytes Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 7.8125;
	}
	/// Converts the supplied KiloBytes Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The KiloBytes Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value * 0.00762939;
	}
}
/// Mebibits Per Second conversion functions
pub mod mebibits_per_second {
	/// Converts the supplied Mebibits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1048576.0;
	}
	/// Converts the supplied Mebibits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 1048.58;
	}
	/// Converts the supplied Mebibits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 1.04858;
	}
	/// Converts the supplied Mebibits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 953.67431640625;
	}
	/// Converts the supplied Mebibits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 953674.0;
	}
	/// Converts the supplied Mebibits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value / 0.00762939;
	}
	/// Converts the supplied Mebibits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 7.62939;
	}
	/// Converts the supplied Mebibits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 7629.39;
	}
	/// Converts the supplied Mebibits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value * 0.000000131072;
	}
	/// Converts the supplied Mebibits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The Mebibits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 1024.0;
	}
}
/// MegaBits Per Second conversion functions
pub mod mega_bits_per_second {
	/// Converts the supplied MegaBits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1e+6;
	}
	/// Converts the supplied MegaBits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied MegaBits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied MegaBits Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 1e+6;
	}
	/// Converts the supplied MegaBits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 125.0;
	}
	/// Converts the supplied MegaBits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value / 8.0;
	}
	/// Converts the supplied MegaBits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 8000.0;
	}
	/// Converts the supplied MegaBits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 8e+6;
	}
	/// Converts the supplied MegaBits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 976.563;
	}
	/// Converts the supplied MegaBits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The MegaBits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value / 1.04858;
	}
}
/// MegaBytes Per Second conversion functions
pub mod mega_bytes_per_second {
	/// Converts the supplied MegaBytes Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 8e+6;
	}
	/// Converts the supplied MegaBytes Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 8000.0;
	}
	/// Converts the supplied MegaBytes Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 8.0;
	}
	/// Converts the supplied MegaBytes Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value / 125.0;
	}
	/// Converts the supplied MegaBytes Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value / 125000.0;
	}
	/// Converts the supplied MegaBytes Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied MegaBytes Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value / 1000.0;
	}
	/// Converts the supplied MegaBytes Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 1e+6;
	}
	/// Converts the supplied MegaBytes Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 7812.5;
	}
	/// Converts the supplied MegaBytes Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The MegaBytes Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value * 7.62939;
	}
}
/// TeraBits Per Second conversion functions
pub mod tera_bits_per_second {
	/// Converts the supplied TeraBits Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 1e+12;
	}
	/// Converts the supplied TeraBits Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 1e+9;
	}
	/// Converts the supplied TeraBits Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 1e+6;
	}
	/// Converts the supplied TeraBits Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied TeraBits Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 1.25e+8;
	}
	/// Converts the supplied TeraBits Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value * 125000.0;
	}
	/// Converts the supplied TeraBits Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value * 125.0;
	}
	/// Converts the supplied TeraBits Per Second value to TeraBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_tera_bytes_per_second(value: f64) -> f64 {
		return value / 8.0;
	}
	/// Converts the supplied TeraBits Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 976562500.0;
	}
	/// Converts the supplied TeraBits Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The TeraBits Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value * 953674.0;
	}
}
/// TeraBytes Per Second conversion functions
pub mod tera_bytes_per_second {
	/// Converts the supplied TeraBytes Per Second value to Bits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_bits_per_second(value: f64) -> f64 {
		return value * 8e+12;
	}
	/// Converts the supplied TeraBytes Per Second value to KiloBits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_kilo_bits_per_second(value: f64) -> f64 {
		return value * 8e+9;
	}
	/// Converts the supplied TeraBytes Per Second value to MegaBits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_mega_bits_per_second(value: f64) -> f64 {
		return value * 8e+6;
	}
	/// Converts the supplied TeraBytes Per Second value to GigaBits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_giga_bits_per_second(value: f64) -> f64 {
		return value * 8000.0;
	}
	/// Converts the supplied TeraBytes Per Second value to TeraBits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_tera_bits_per_second(value: f64) -> f64 {
		return value * 8.0;
	}
	/// Converts the supplied TeraBytes Per Second value to KiloBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_kilo_bytes_per_second(value: f64) -> f64 {
		return value * 1e+9;
	}
	/// Converts the supplied TeraBytes Per Second value to MegaBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_mega_bytes_per_second(value: f64) -> f64 {
		return value * 1e+6;
	}
	/// Converts the supplied TeraBytes Per Second value to GigaBytes Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_giga_bytes_per_second(value: f64) -> f64 {
		return value * 1000.0;
	}
	/// Converts the supplied TeraBytes Per Second value to Kibibits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_kibibits_per_second(value: f64) -> f64 {
		return value * 7812500000.0;
	}
	/// Converts the supplied TeraBytes Per Second value to Mebibits Per Second
	/// # Arguments
	/// * `value` - The TeraBytes Per Second input value
	pub fn to_mebibits_per_second(value: f64) -> f64 {
		return value / 0.000000131072;
	}
}
