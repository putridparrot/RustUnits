// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>


#[cfg(test)]
mod tests {
	use unit_conversions::*;
	use assert_approx_eq::assert_approx_eq;

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmechanical_horse_power_to_metric_horse_power_1() {
		let result: f64 = power::mechanical_horse_power::to_metric_horse_power(65.0971);
		assert_approx_eq!(65.9999749, result, 0.01);
	}

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmechanical_horse_power_to_metric_horse_power_2() {
		let result: f64 = power::mechanical_horse_power::to_metric_horse_power(121.317);
		assert_approx_eq!(122.9996, result, 0.01);
	}

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmechanical_horse_power_to_metric_horse_power_3() {
		let result: f64 = power::mechanical_horse_power::to_metric_horse_power(86.7962);
		assert_approx_eq!(88.0, result, 0.01);
	}

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmetric_horse_power_to_mechanical_horse_power_1() {
		let result: f64 = power::metric_horse_power::to_mechanical_horse_power(126.734);
		assert_approx_eq!(125.0, result, 0.01);
	}

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmetric_horse_power_to_mechanical_horse_power_2() {
		let result: f64 = power::metric_horse_power::to_mechanical_horse_power(91.2483);
		assert_approx_eq!(90.0, result, 0.01);
	}

	/// Need to convert to parameterized tests
	#[test]
	fn it_convert_knownmetric_horse_power_to_mechanical_horse_power_3() {
		let result: f64 = power::metric_horse_power::to_mechanical_horse_power(425.825);
		assert_approx_eq!(419.9997, result, 0.01);
	}

}
